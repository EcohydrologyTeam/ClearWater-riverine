Timer unit: 1e-07 s

Total time: 12.3447 s
File: C:\Users\sjordan\AppData\Local\Temp\ipykernel_2524\1840253143.py
Function: run_n_timesteps_profiled at line 2

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     2                                           def run_n_timesteps_profiled(
     3                                               time_steps: int,
     4                                               model: EnergyBudget,
     5                                               plan: cwr.ClearwaterRiverine,
     6                                               meteo_params,
     7                                               concentration_update = None
     8                                           ):
     9        60        358.0      6.0      0.0      for i in range(1, time_steps):
    10        59   22060899.0 373913.5     17.9          plan.update(concentration_update)
    11                                                   # print("post-transport", plan.mesh.concentration.isel(time=i, nface=231).values)
    12        59      10347.0    175.4      0.0          updated_state_values = {
    13        59     506939.0   8592.2      0.4              'water_temp_c': plan.mesh['concentration'].isel(time=i, nface=slice(0, plan.mesh.nreal + 1)),
    14        59     482324.0   8175.0      0.4              'volume': plan.mesh['volume'].isel(time=i, nface = slice(0, plan.mesh.nreal + 1)),
    15        59     237956.0   4033.2      0.2              'surface_area': plan.mesh['faces_surface_area'].isel(nface = slice(0, plan.mesh.nreal + 1)),
    16        59     633291.0  10733.7      0.5              'q_solar': transport_model.mesh.concentration.isel(time=i, nface = slice(0, plan.mesh.nreal + 1)) * 0 + meteo_params['q_solar'][i],
    17        59     638419.0  10820.7      0.5              'air_temp_c': transport_model.mesh.concentration.isel(time=i, nface = slice(0, plan.mesh.nreal + 1)) * 0 + meteo_params['air_temp_c'][i],
    18        59     490858.0   8319.6      0.4              'sed_temp_c': plan.mesh['concentration'].isel(time=i, nface=slice(0, plan.mesh.nreal + 1))
    19                                                   }
    20                                                   
    21        59   84607008.0    1e+06     68.5          model.increment_timestep(updated_state_values)
    22                                                   # print("post-reaction", model.dataset.water_temp_c.isel(my_time_step=i, nface=231).values)
    23        59   13509350.0 228972.0     10.9          ds = model.dataset.where(~np.isinf(model.dataset), 0)
    24        59     269192.0   4562.6      0.2          concentration_update = {"concentration": ds.water_temp_c.isel(my_time_step=i)}